{"version":3,"sources":["logo.svg","ProjectCard.js","SkillsCard.js","SocialLinks.js","Banner.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProjectCard","props","className","href","webpage","src","screenshot","alt","heading","github","class","description","SkillsCard","content","SocialLinks","target","rel","Banner","Footer","projects","skills","App","map","skill","project","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sJAAAA,EAAOC,QAAU,IAA0B,kC,gNCG5B,SAASC,EAAYC,GAClC,OACE,yBAAKC,UAAU,gBACb,uBAAGC,KAAMF,EAAMG,QAASF,UAAU,0BAChC,yBACEG,IAAKJ,EAAMK,WACXC,IAAI,qBACJL,UAAU,yBAGd,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,yBACXD,EAAMO,QAAS,IAChB,uBAAGL,KAAMF,EAAMQ,OAAQP,UAAU,8BAC/B,uBAAGQ,MAAM,2BAGb,uBAAGR,UAAU,6BAA6BD,EAAMU,e,MCjBzC,SAASC,EAAWX,GACjC,OACE,yBAAKC,UAAU,eACb,wBAAIA,UAAU,wBAAwBD,EAAMO,SAC5C,uBAAGN,UAAU,4BAA4BD,EAAMY,U,YCJtC,SAASC,IACtB,OACE,wBAAIZ,UAAU,gBACZ,4BACE,uBACEC,KAAK,6CACLY,OAAO,SACPC,IAAI,sBACJd,UAAU,sBAEV,uBAAGA,UAAU,sBAGjB,4BACE,uBACEC,KAAK,+BACLY,OAAO,SACPC,IAAI,sBACJd,UAAU,sBAEV,uBAAGA,UAAU,2BAGjB,4BACE,uBACEC,KAAK,6BACLY,OAAO,SACPC,IAAI,sBACJd,UAAU,sBAEV,uBAAGA,UAAU,6BC7BR,SAASe,IACtB,OACE,yBAAKf,UAAU,cACb,yBAAKA,UAAU,mCACb,yBAAKG,IAAI,YAAYE,IAAI,gBAAgBL,UAAU,oBAErD,yBAAKA,UAAU,YACb,wBAAIA,UAAU,iBAAd,iBACA,wBAAIA,UAAU,oBAAd,6BAEF,yBAAKA,UAAU,YACb,kBAAC,EAAD,Q,MCZO,SAASgB,IACtB,OACE,yBAAKhB,UAAU,cACb,yBAAKA,UAAU,0BACb,wBAAIA,UAAU,0BAAd,0BAEE,0BAAMA,UAAU,wBAAhB,sBCDV,IAAMiB,EAAW,CACf,CACEX,QAAS,YACTG,YACE,oLACFF,OAAQ,yCACRL,QAAS,+BACTE,WAAY,YAEd,CACEE,QAAS,WACTG,YACE,0NACFF,OAAQ,6CACRL,QAAS,qCACTE,WAAY,iBAEd,CACEE,QAAS,WACTG,YACE,oPACFF,OAAQ,sCACRL,QAAS,6CACTE,WAAY,kBAIVc,EAAS,CACb,CACEZ,QAAS,YACTK,QAAS,kEAEX,CACEL,QAAS,WACTK,QACE,0FAEJ,CACEL,QAAS,SACTK,QACE,6HAEJ,CACEL,QAAS,QACTK,QAAS,yGAkCEQ,MA9Bf,WACE,OACE,yBAAKnB,UAAU,aACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,cACZkB,EAAOE,KAAI,SAAAC,GAAK,OACf,yBAAKrB,UAAU,yBACb,kBAAC,EAAD,CAAYM,QAASe,EAAMf,QAASK,QAASU,EAAMV,eAKzD,yBAAKX,UAAU,gBACZiB,EAASG,KAAI,SAAAE,GAAO,OACnB,yBAAKtB,UAAU,2BACb,kBAAC,EAAD,CACEM,QAASgB,EAAQhB,QACjBG,YAAaa,EAAQb,YACrBF,OAAQe,EAAQf,OAChBL,QAASoB,EAAQpB,QACjBE,WAAYkB,EAAQlB,kBAK5B,kBAAC,EAAD,QCrEcmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d667036b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from \"react\";\nimport \"./ProjectCard.css\";\n\nexport default function ProjectCard(props) {\n  return (\n    <div className=\"project_card\">\n      <a href={props.webpage} className=\"project_card_linkimage\">\n        <img\n          src={props.screenshot}\n          alt=\"project screenshot\"\n          className=\"project_card__image\"\n        />\n      </a>\n      <div className=\"project_card__details\">\n        <h4 className=\"project_card__heading\">\n          {props.heading}{\" \"}\n          <a href={props.github} className=\"project_card__heading_link\">\n            <i class=\"fab fa-github-square\"></i>\n          </a>\n        </h4>\n        <p className=\"project_card__description\">{props.description}</p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./SkillsCard.css\";\n\nexport default function SkillsCard(props) {\n  return (\n    <div className=\"skills_card\">\n      <h4 className=\"skills_card__heading\">{props.heading}</h4>\n      <p className=\"skills_card__description\">{props.content}</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./SocialLinks.css\";\n\nexport default function SocialLinks() {\n  return (\n    <ul className=\"social_links\">\n      <li>\n        <a\n          href=\"https://www.linkedin.com/in/loki-holbourn/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"social_links__link\"\n        >\n          <i className=\"fab fa-linkedin\"></i>\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"https://github.com/Lholbourn\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"social_links__link\"\n        >\n          <i className=\"fab fa-github-square\"></i>\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"https://twitter.com/lokih_\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"social_links__link\"\n        >\n          <i className=\"fab fa-twitter-square\"></i>\n        </a>\n      </li>\n    </ul>\n  );\n}\n","import React from \"react\";\nimport \"./Banner.css\";\nimport SocialLinks from \"./SocialLinks\";\n\nexport default function Banner() {\n  return (\n    <div className=\"row banner\">\n      <div className=\"col-sm-2 banner__avatar_wrapper\">\n        <img src=\"/loki.jpg\" alt=\"Loki Holbourn\" className=\"banner__avatar\" />\n      </div>\n      <div className=\"col-sm-9\">\n        <h1 className=\"banner__title\">Loki Holbourn</h1>\n        <h3 className=\"banner__subtitle\">Full Stack Web Developer</h3>\n      </div>\n      <div className=\"col-sm-1\">\n        <SocialLinks />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Footer.css\";\n\nexport default function Footer() {\n  return (\n    <div className=\"row footer\">\n      <div className=\"col-12 footer__content\">\n        <h3 className=\"footer__content_normal\">\n          Get in touch with me at\n          <span className=\"footer__content_bold\"> loki@lokih.com</span>\n        </h3>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport ProjectCard from \"./ProjectCard\";\nimport SkillsCard from \"./SkillsCard\";\nimport Banner from \"./Banner\";\nimport Footer from \"./Footer\";\n\nconst projects = [\n  {\n    heading: \"Onetwosix\",\n    description:\n      \"An app designed to make your evenings at home more enjoyable by recommending movie and takeawayrestaurant combinations based on user location, genre choice, and food preferences\",\n    github: \"https://github.com/Lholbourn/ONETWOSIX\",\n    webpage: \"https://www.onetwosix.co.uk/\",\n    screenshot: \"/126.jpg\"\n  },\n  {\n    heading: \"Squawker\",\n    description:\n      \"This was a simple clone of twitter, designed using bootstrap. It includes a simple log in/log out feature, using the Devise ruby gem. It allows the user to tweet, upload an avatar and view the tweets of other users.\",\n    github: \"https://github.com/Lholbourn/twitter-clone\",\n    webpage: \"https://lh-squawker.herokuapp.com/\",\n    screenshot: \"/squawker.jpg\"\n  },\n  {\n    heading: \"Limelite\",\n    description:\n      \"My team and I at Le Wagon London, made a practise project in 4 days. This website allows users to book tickets to unique movie screenings, or to create events themselves. It was designed to practise our skills and is based roughly on AirBnB.\",\n    github: \"https://github.com/Lholbourn/cinema\",\n    webpage: \"https://cinema-airbnb-clone.herokuapp.com/\",\n    screenshot: \"/limelite.jpg\"\n  }\n];\n\nconst skills = [\n  {\n    heading: \"Front End\",\n    content: \"HTML • CSS • Sass Javascript (ES6+) • Bootstrap\"\n  },\n  {\n    heading: \"Back End\",\n    content:\n      \"Ruby • Ruby on Rails • SQL ORM (ActiveRecord) • MVC Database Migrations\"\n  },\n  {\n    heading: \"Skills\",\n    content:\n      \"Schema design • Code review OOP • Command line tools • REST API integration • Web scraping (Nokogiri)\"\n  },\n  {\n    heading: \"Tools\",\n    content: \"Yarn • npm • RubyGems • git • Github • Figma • Whimsical • Trello\"\n  }\n];\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Banner />\n      <div className=\"skills row\">\n        {skills.map(skill => (\n          <div className=\"skills__item col-md-3\">\n            <SkillsCard heading={skill.heading} content={skill.content} />\n          </div>\n        ))}\n      </div>\n\n      <div className=\"projects row\">\n        {projects.map(project => (\n          <div className=\"projects__item col-md-4\">\n            <ProjectCard\n              heading={project.heading}\n              description={project.description}\n              github={project.github}\n              webpage={project.webpage}\n              screenshot={project.screenshot}\n            />\n          </div>\n        ))}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}